# Nginx configuration for host-level proxy to Zepplin Registry
# Place this in your host nginx configuration (e.g., /etc/nginx/sites-available/zepplin)

# Rate limiting zones (add to http block if not already defined)
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;

# Cache zones (add to http block if not already defined)
proxy_cache_path /var/cache/nginx/zepplin-packages levels=1:2 keys_zone=packages:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/zepplin-static levels=1:2 keys_zone=static:10m max_size=500m inactive=24h use_temp_path=off;

# Upstream to the Docker container
upstream zepplin_backend {
    server 127.0.0.1:8080;
    keepalive 32;
}

server {
    listen 80;
    server_name zig.cktech.org;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name zig.cktech.org;
    
    # SSL configuration (adjust paths as needed)
    ssl_certificate /etc/letsencrypt/live/zig.cktech.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/zig.cktech.org/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Remove nginx version
    server_tokens off;
    
    # Client upload size for packages
    client_max_body_size 100M;
    
    # Logging
    access_log /var/log/nginx/zepplin_access.log;
    error_log /var/log/nginx/zepplin_error.log;
    
    # CRITICAL FOR SSO: Preserve headers for OAuth/OIDC
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;  # Important for OAuth redirects
    proxy_set_header X-Forwarded-Host $server_name;
    
    # Connection settings
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # OAuth/OIDC endpoints (Azure AD & GitHub SSO)
    location /api/v1/auth/ {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://zepplin_backend;
        
        # Ensure cookies work correctly for SSO
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Lax";
    }
    
    # OAuth callback endpoints
    location ~ ^/api/v1/auth/(azure|github)/callback {
        proxy_pass http://zepplin_backend;
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Lax";
    }
    
    # Package upload endpoints
    location ~ /api/v1/packages/.+/releases$ {
        limit_req zone=upload burst=3 nodelay;
        proxy_pass http://zepplin_backend;
        proxy_request_buffering off;
        proxy_max_temp_file_size 0;
    }

    # Package downloads with caching
    location ~ /api/v1/packages/.+/download/ {
        proxy_pass http://zepplin_backend;
        proxy_cache packages;
        proxy_cache_valid 200 1h;
        proxy_cache_key "$scheme$proxy_host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # build.zig.zon endpoints with long-term caching
    location ~ /api/packages/.+/(zon|tarball|hash)/ {
        proxy_pass http://zepplin_backend;
        proxy_cache packages;
        proxy_cache_valid 200 24h;
        proxy_cache_key "$scheme$proxy_host$request_uri";
        add_header X-Cache-Status $upstream_cache_status;
        expires 1d;
    }

    # General API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://zepplin_backend;
        
        # CORS headers for API access
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    }

    # Static assets with caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://zepplin_backend;
        proxy_cache static;
        proxy_cache_valid 200 7d;
        expires 7d;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://zepplin_backend;
        access_log off;
    }

    # Main application
    location / {
        proxy_pass http://zepplin_backend;
        limit_req zone=api burst=50 nodelay;
        
        # Required for SSO to work properly
        proxy_cookie_path / "/; HTTPOnly; Secure; SameSite=Lax";
    }
}